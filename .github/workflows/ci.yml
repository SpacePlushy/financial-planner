name: CI

on:
  push:
    branches: [ main, develop, strategy-pattern-refactor ]
  pull_request:
    branches: [ main ]

jobs:
  test:
    runs-on: ubuntu-latest

    strategy:
      matrix:
        node-version: [18.x, 20.x]

    steps:
    - name: Checkout repository
      uses: actions/checkout@v4

    - name: Setup Node.js ${{ matrix.node-version }}
      uses: actions/setup-node@v4
      with:
        node-version: ${{ matrix.node-version }}

    - name: Cache dependencies
      uses: actions/cache@v3
      with:
        path: ~/.npm
        key: ${{ runner.os }}-node-${{ matrix.node-version }}-${{ hashFiles('**/package-lock.json') }}
        restore-keys: |
          ${{ runner.os }}-node-${{ matrix.node-version }}-
          ${{ runner.os }}-node-

    - name: Install dependencies
      run: npm ci

    - name: Run linter
      run: npm run lint || true
      # Continue even if linter fails since project might not have lint script yet

    - name: Run tests
      run: npm test -- --coverage --watchAll=false
      env:
        CI: true

    - name: Build project
      run: npm run build

    - name: Upload coverage reports
      uses: actions/upload-artifact@v3
      if: matrix.node-version == '20.x'
      with:
        name: coverage-report
        path: coverage/

    - name: Upload build artifacts
      uses: actions/upload-artifact@v3
      if: matrix.node-version == '20.x'
      with:
        name: build-artifacts
        path: build/

  e2e-tests:
    runs-on: ubuntu-latest
    needs: test

    steps:
    - name: Checkout repository
      uses: actions/checkout@v4

    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '20.x'

    - name: Cache dependencies
      uses: actions/cache@v3
      with:
        path: ~/.npm
        key: ${{ runner.os }}-node-20.x-${{ hashFiles('**/package-lock.json') }}
        restore-keys: |
          ${{ runner.os }}-node-20.x-
          ${{ runner.os }}-node-

    - name: Install dependencies
      run: npm ci

    - name: Build project
      run: npm run build

    - name: Run Cypress tests
      uses: cypress-io/github-action@v6
      with:
        start: npm start
        wait-on: 'http://localhost:3000'
        wait-on-timeout: 120
        browser: chrome
        record: false

    - name: Upload Cypress screenshots
      uses: actions/upload-artifact@v3
      if: failure()
      with:
        name: cypress-screenshots
        path: cypress/screenshots

    - name: Upload Cypress videos
      uses: actions/upload-artifact@v3
      if: failure()
      with:
        name: cypress-videos
        path: cypress/videos