.actionBar {
  display: flex;
  justify-content: space-between;
  align-items: center;
  padding: 12px;
  background-color: var(--bg-secondary);
  border-top: 1px solid var(--border-color);
  position: sticky;
  bottom: 0;
  z-index: 10;
}

.actionGroup {
  display: flex;
  gap: 8px;
  align-items: center;
}

.actionButton {
  display: flex;
  align-items: center;
  gap: 6px;
  padding: 6px 12px;
  border: none;
  border-radius: 6px;
  font-size: 0.75rem;
  font-weight: 500;
  cursor: pointer;
  transition: all 0.2s ease;
  background-color: var(--bg-tertiary);
  color: var(--text-primary);
  position: relative;
  overflow: hidden;
}

.actionButton:hover:not(:disabled) {
  transform: translateY(-1px);
  box-shadow: 0 2px 4px var(--shadow-color);
}

.actionButton:active:not(:disabled) {
  transform: translateY(0);
}

.actionButton:disabled {
  opacity: 0.5;
  cursor: not-allowed;
}

.actionButton svg {
  width: 16px;
  height: 16px;
  flex-shrink: 0;
}

/* Button Text - Hidden on small screens */
.buttonText {
  display: inline;
}

@media (max-width: 1200px) {
  .buttonText {
    display: none;
  }

  .actionButton {
    padding: 8px;
  }
}

/* Button Variants */
.actionButton.save {
  background-color: var(--success-color);
  color: white;
}

.actionButton.save:hover:not(:disabled) {
  background-color: color-mix(in srgb, var(--success-color) 85%, black);
}

.actionButton.export {
  background-color: var(--info-color);
  color: white;
}

.actionButton.export:hover:not(:disabled) {
  background-color: color-mix(in srgb, var(--info-color) 85%, black);
}

.actionButton.import {
  background-color: var(--warning-color);
  color: black;
}

.actionButton.import:hover:not(:disabled) {
  background-color: color-mix(in srgb, var(--warning-color) 85%, black);
}

.actionButton.secondary {
  background-color: var(--bg-tertiary);
  color: var(--text-primary);
  border: 1px solid var(--border-color);
}

.actionButton.secondary:hover:not(:disabled) {
  background-color: var(--bg-primary);
  border-color: var(--primary-color);
  color: var(--primary-color);
}

.actionButton.danger {
  background-color: transparent;
  color: var(--error-color);
  border: 1px solid var(--error-color);
}

.actionButton.danger:hover:not(:disabled) {
  background-color: var(--error-color);
  color: white;
}

.actionButton.help {
  background-color: transparent;
  color: var(--text-secondary);
  border: 1px solid transparent;
}

.actionButton.help:hover:not(:disabled) {
  background-color: var(--bg-tertiary);
  color: var(--primary-color);
}

/* Ripple effect */
.actionButton::after {
  content: '';
  position: absolute;
  top: 50%;
  left: 50%;
  width: 0;
  height: 0;
  border-radius: 50%;
  background: rgba(255, 255, 255, 0.3);
  transform: translate(-50%, -50%);
  transition:
    width 0.6s,
    height 0.6s;
}

.actionButton:active::after {
  width: 300px;
  height: 300px;
}

/* Keyboard focus styles */
.actionButton:focus-visible {
  outline: 2px solid var(--primary-color);
  outline-offset: 2px;
}

/* Loading state */
.actionButton.loading {
  pointer-events: none;
  position: relative;
}

.actionButton.loading::before {
  content: '';
  position: absolute;
  top: 0;
  left: 0;
  right: 0;
  bottom: 0;
  background: linear-gradient(
    90deg,
    transparent 0%,
    rgba(255, 255, 255, 0.3) 50%,
    transparent 100%
  );
  animation: shimmer 1.5s infinite;
}

@keyframes shimmer {
  0% {
    transform: translateX(-100%);
  }
  100% {
    transform: translateX(100%);
  }
}

/* Compact mode for embedded use */
.actionBar.compact {
  padding: 8px;
  background: transparent;
  border: none;
}

.actionBar.compact .actionButton {
  padding: 4px 8px;
  font-size: 0.7rem;
}

.actionBar.compact .actionButton svg {
  width: 14px;
  height: 14px;
}

/* Mobile fixed positioning styles */
@media (max-width: 1024px) {
  .actionBar {
    position: static; /* Override sticky positioning */
    background-color: var(--bg-secondary);
    border-top: 1px solid var(--border-color);
    box-shadow: 0 -2px 8px var(--shadow-color);
  }

  .actionBar.compact {
    padding: 12px;
    background-color: var(--bg-secondary);
    border-top: 1px solid var(--border-color);
  }

  .actionBar.compact .actionButton {
    padding: 10px;
    font-size: 0.875rem;
    min-width: 44px;
    min-height: 44px;
  }

  .actionBar.compact .actionButton svg {
    width: 20px;
    height: 20px;
  }
}

/* Dark mode adjustments */
[data-theme='dark'] .actionButton.import {
  background-color: color-mix(in srgb, var(--warning-color) 80%, black);
  color: white;
}

[data-theme='dark'] .actionButton.secondary {
  border-color: var(--bg-tertiary);
}

/* Tooltip on hover for icon-only buttons */
@media (max-width: 1200px) {
  .actionButton {
    position: relative;
  }

  .actionButton:hover::before {
    content: attr(title);
    position: absolute;
    bottom: 100%;
    left: 50%;
    transform: translateX(-50%);
    padding: 4px 8px;
    background: var(--bg-tertiary);
    color: var(--text-primary);
    font-size: 0.7rem;
    border-radius: 4px;
    white-space: nowrap;
    margin-bottom: 4px;
    opacity: 0;
    animation: tooltipFadeIn 0.2s ease-out forwards;
    animation-delay: 0.5s;
    pointer-events: none;
    box-shadow: 0 2px 4px var(--shadow-color);
  }
}

@keyframes tooltipFadeIn {
  to {
    opacity: 1;
  }
}
