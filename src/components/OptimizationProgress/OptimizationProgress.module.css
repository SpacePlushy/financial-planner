.container {
  background: var(--bg-secondary);
  border-radius: 12px;
  padding: 24px;
  box-shadow: 0 2px 8px var(--shadow-color);
  transition: all 0.3s ease;
}

/* Dark mode now handled by CSS variables */

.header {
  display: flex;
  justify-content: space-between;
  align-items: center;
  margin-bottom: 24px;
}

.title {
  font-size: 1.25rem;
  font-weight: 600;
  margin: 0;
  color: var(--text-primary);
}


.cancelButton {
  padding: 8px 16px;
  border: none;
  border-radius: 6px;
  background: var(--error-color);
  color: white;
  font-size: 0.875rem;
  font-weight: 500;
  cursor: pointer;
  transition: all 0.2s ease;
}

.cancelButton:hover {
  background: #c62828;
  transform: translateY(-1px);
  box-shadow: 0 2px 4px rgba(220, 53, 69, 0.3);
}

.cancelButton:active {
  transform: translateY(0);
  box-shadow: none;
}

.content {
  display: flex;
  flex-direction: column;
  gap: 24px;
}

/* Progress Section */
.progressSection {
  display: flex;
  flex-direction: column;
  gap: 8px;
}

.progressInfo {
  display: flex;
  justify-content: space-between;
  align-items: baseline;
}

.progressLabel {
  font-size: 0.875rem;
  color: var(--text-secondary);
}

.progressValue {
  font-size: 1.5rem;
  font-weight: 600;
  color: var(--text-primary);
  transition: color 0.3s ease;
}

.progressValue.changing {
  color: var(--success-color);
  animation: pulse 0.5s ease;
}


.progressBarContainer {
  width: 100%;
  height: 8px;
  background: var(--bg-tertiary);
  border-radius: 4px;
  overflow: hidden;
  position: relative;
}


.progressBar {
  height: 100%;
  background: linear-gradient(90deg, var(--primary-color) 0%, var(--primary-hover) 100%);
  border-radius: 4px;
  transition: width 0.5s ease;
  position: relative;
  overflow: hidden;
}

.progressBar::after {
  content: '';
  position: absolute;
  top: 0;
  left: 0;
  right: 0;
  bottom: 0;
  background: linear-gradient(
    90deg,
    transparent 0%,
    rgba(255, 255, 255, 0.3) 50%,
    transparent 100%
  );
  animation: shimmer 2s infinite;
}

@keyframes shimmer {
  0% {
    transform: translateX(-100%);
  }
  100% {
    transform: translateX(100%);
  }
}

.generationInfo {
  font-size: 0.75rem;
  color: var(--text-secondary);
  text-align: center;
}


/* Metrics Grid */
.metricsGrid {
  display: grid;
  grid-template-columns: repeat(auto-fit, minmax(200px, 1fr));
  gap: 16px;
}

@media (max-width: 768px) {
  .metricsGrid {
    grid-template-columns: repeat(auto-fit, minmax(150px, 1fr));
    gap: 12px;
  }
}

.metricCard {
  display: flex;
  align-items: center;
  gap: 12px;
  padding: 16px;
  background: var(--bg-primary);
  border-radius: 8px;
  transition: all 0.2s ease;
}

.metricCard:hover {
  transform: translateY(-2px);
  box-shadow: 0 4px 12px var(--shadow-color);
}


.metricIcon {
  width: 40px;
  height: 40px;
  display: flex;
  align-items: center;
  justify-content: center;
  background: var(--bg-tertiary);
  border-radius: 8px;
  color: var(--primary-color);
}


.metricContent {
  display: flex;
  flex-direction: column;
  gap: 4px;
  flex: 1;
}

.metricLabel {
  font-size: 0.75rem;
  color: var(--text-secondary);
  text-transform: uppercase;
  letter-spacing: 0.05em;
}


.metricValue {
  font-size: 1.25rem;
  font-weight: 600;
  color: var(--text-primary);
  transition: all 0.3s ease;
}

.metricValue.changing {
  animation: pulse 0.5s ease;
}

.metricValue.negative {
  color: var(--error-color);
}

.metricValue.hasViolations {
  color: var(--warning-color);
}


@keyframes pulse {
  0% {
    transform: scale(1);
  }
  50% {
    transform: scale(1.05);
  }
  100% {
    transform: scale(1);
  }
}

/* Status Message */
.statusMessage {
  text-align: center;
  padding: 12px;
  background: rgba(33, 150, 243, 0.1);
  border-radius: 6px;
  font-size: 0.875rem;
}


.warningText {
  color: var(--warning-color);
  font-weight: 500;
}

.infoText {
  color: var(--info-color);
}

/* Loading State */
.loadingContainer {
  display: flex;
  flex-direction: column;
  align-items: center;
  justify-content: center;
  padding: 40px;
  gap: 16px;
}

.loadingSpinner {
  width: 40px;
  height: 40px;
  border: 3px solid var(--bg-tertiary);
  border-top-color: var(--primary-color);
  border-radius: 50%;
  animation: spin 0.8s linear infinite;
}

@keyframes spin {
  to {
    transform: rotate(360deg);
  }
}

.loadingText {
  font-size: 0.875rem;
  color: var(--text-secondary);
  animation: loadingPulse 1.5s ease-in-out infinite;
}

@keyframes loadingPulse {
  0%,
  100% {
    opacity: 0.5;
  }
  50% {
    opacity: 1;
  }
}

/* Responsive Design */
@media (max-width: 640px) {
  .container {
    padding: 16px;
  }

  .title {
    font-size: 1.125rem;
  }

  .progressValue {
    font-size: 1.25rem;
  }

  .metricCard {
    padding: 12px;
  }

  .metricIcon {
    width: 36px;
    height: 36px;
  }

  .metricValue {
    font-size: 1.125rem;
  }
}

/* Reduced Motion Support */
@media (prefers-reduced-motion: reduce) {
  .progressBar,
  .metricValue,
  .cancelButton,
  .metricCard {
    transition: none;
  }

  .progressBar::after,
  .loadingSpinner,
  .loadingText {
    animation: none;
  }

  .metricValue.changing {
    animation: none;
  }
}

/* High Contrast Mode */
@media (prefers-contrast: high) {
  .container {
    border: 2px solid currentColor;
  }

  .progressBarContainer {
    border: 1px solid currentColor;
  }

  .metricCard {
    border: 1px solid currentColor;
  }

  .cancelButton {
    border: 2px solid currentColor;
  }
}
